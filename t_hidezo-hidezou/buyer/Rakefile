# Rakeile:

require 'houston'

ROOT = File.expand_path(File.dirname(__FILE__))

task :push_notification do
  # Environment variables are automatically read, or can be overridden by any specified options. You can also
  # conveniently use `Houston::Client.development` or `Houston::Client.production`.
  APN = Houston::Client.development
  APN.certificate = File.read("./production_com.dezamisystem.app.buyer.pem")
  # An example of the token sent back when a device registers for notifications
  # token = "<588ea7da e6f2accb 387c5f01 9f2832c7 5eb8c014 6474783d fab7dce3 6d71e1aa>"
  token = "588ea7dae6f2accb387c5f019f2832c75eb8c0146474783dfab7dce36d71e1aa"

  # Create a notification that alerts a message to the user, plays a sound, and sets the badge on the app
  notification = Houston::Notification.new(device: token)
  notification.alert = "Hello, Good by my World!"

  # Notifications can also change the badge count, have a custom sound, have a category identifier, indicate available Newsstand content, or pass along arbitrary data.
  notification.badge = 18
  notification.sound = "sosumi.aiff"
  notification.category = "INVITE_CATEGORY"
  notification.content_available = true
#  notification.custom_data = {"supplierUp": {"supplierUpList": [ {"supplierId": "6170513005638324225"}, {"supplierId": "6147666687253549057"} ]}, "messageUp": {"messageUpList": [ {"order_no": "6170512017103785986-00028", "messageCount": "21"},{"order_no": "6170512017103785986-00027", "messageCount": "9"} ] }}

  # And... sent! That's all it takes.
  APN.push(notification)
end
